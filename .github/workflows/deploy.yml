name: patch/deploy v2

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Every Tuesday at 18:52 UTC
    - cron: '52 18 * * 2'

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1) Get our repo (contains custom/…)
      - name: Checkout custom overrides
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 2) Get upstream scratch-gui
      - name: Checkout TurboWarp/scratch-gui
        uses: actions/checkout@v4
        with:
          repository: TurboWarp/scratch-gui
          path: scratch-gui
          persist-credentials: false

      # 3) Copy in your overrides before the build
      - name: Inject custom icons, cursors & CSS tweaks
        run: |
          # Site icon
          cp custom/site_icon.png scratch-gui/src/lib/gui/assets/icon.png
          # Cursors
          wget -qO scratch-gui/src/lib/gui/assets/cursor.png     https://fisheater.peterdance.com/resources/cursor.png
          wget -qO scratch-gui/src/lib/gui/assets/cursor_select.png https://fisheater.peterdance.com/resources/cursor_select.png
          # CSS var tweak (light theme shown here; repeat for dark if you need)
          apply_patch << 'EOF'
          *** Begin Patch
          *** Update File: scratch-gui/src/lib/themes/gui/light.css
          @@ :root {
          -  --looks-secondary: #888888;
          +  --looks-secondary: #00aa00;
          *** End Patch
          EOF

      # 4) Build
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Build scratch-gui
        run: |
          cd scratch-gui
          npm ci
          NODE_ENV=production ROUTING_STYLE=hash npm run build

      # 5) Upload to GitHub Pages
      - name: Upload site to Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: scratch-gui/build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
